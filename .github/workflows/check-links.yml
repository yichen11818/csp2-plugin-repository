name: Check Download Links

on:
  # Run weekly
  schedule:
    - cron: '0 0 * * 0'
  
  # Allow manual trigger
  workflow_dispatch:

jobs:
  check-links:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # cache: 'npm'  # 暂时禁用缓存，避免需要 package-lock.json
      
      - name: Install dependencies
        run: npm install
      
      - name: Check links
        id: check
        continue-on-error: true
        run: |
          npm run check-links 2>&1 | tee links.log
          echo "check_output<<EOF" >> $GITHUB_OUTPUT
          cat links.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create issue if links are broken
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('links.log', 'utf-8');
            
            const title = '🔗 Broken Download Links Detected';
            
            let body = '## Link Check Failed\n\n';
            body += 'Some plugin download links or repository URLs are not accessible.\n\n';
            body += '### Details\n\n';
            body += '```\n' + output + '\n```\n\n';
            body += '### Action Required\n\n';
            body += 'Please review the failed links and either:\n';
            body += '1. Update the plugin configuration if the URL has changed\n';
            body += '2. Disable the plugin if it is no longer available\n';
            body += '3. Contact the plugin author\n\n';
            body += '---\n';
            body += '*This issue was automatically created by the link checker workflow.*';

            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['automated', 'broken-links']
            });
            
            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['automated', 'broken-links', 'bug']
              });
            }
      
      - name: Summary
        if: always()
        run: |
          echo "### Link Check Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat links.log >> $GITHUB_STEP_SUMMARY

